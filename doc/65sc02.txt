legend:

n        - byte
nn       - word (little endian)
#n       - immediate value

(n)      - zero-page indirect
         ($10) => address is stored at $10,$11
(n),Y    - zero-page indirect ; Y-indexed
         ($10),Y => get address stored at $10,$11
                    add value of Y
(n,X)    - zero-page indirect ; X-indexed
         ($10,X) = get address stored at $10+X,$11+X
(nn,X)   - indirect ; X-indexed
n,X      - zeropage ; X - indexed
nn,X     - direct ; X -indexed
nn,Y     - direct ; Y-indexed

rel      - two's complemnet ; pc-relative

    -> Hi-Nibble
   |  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  A  |  B  |  C  |  D  |  E  |  F  |
 ---------------------------------------------------------------------------------------------------
   | BRK | BPL | JSR | BMI | RTI | BVC | RTS | BVS | BRA | BCC | LDY | BCS | CPY | BNE | CPX | BEQ |
 0 | #nn | rel | nnnn| rel |     | rel |     | rel | rel | rel | #nn | rel | #nn | rel | #nn | rel |
   |     |     |     |     |     |     |     |     |   (1|     |     |     |     |     |     |     |
 ---------------------------------------------------------------------------------------------------
   | ORA | ORA | AND | AND | EOR | EOR | ADC | ADC | STA | STA | LDA | LDA | CMP | CMP | SBC | SBC |
 1 |(n,X)|(n),Y|(n,X)|(n),Y|(n,X)|(n),Y|(n,X)|(n),Y|(n,X)|(n),Y|(n,X)|(n),Y|(n,X)|(n),Y|(n,X)|(n),Y|
   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
 ---------------------------------------------------------------------------------------------------
   |     | ORA |     | AND |     | EOR |     | ADC |     | STA | LDX | LDA |     | CMP |     | SBC |
 2 |     | (n) |     | (n) |     | (n) |     | (n) |     | (n) | #n  | (n) |     | (n) |     | (n) |
   |     |   (1|     |   (1|     |   (1|     |   (1|     |   (1|     |   (1|     |   (1|     |   (1|
 ---------------------------------------------------------------------------------------------------
   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
 3 |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
 ---------------------------------------------------------------------------------------------------
   | TSB | TRB | BIT | BIT |     |     | STZ | STZ | STY | STY | LDY | LDY | CPY |     | CPX |     |
 4 |  n  |  n  |  n  | n,X |     |     |  n  | n,X |  n  | n,X |  n  | n,X |  n  |     |  n  |     |
   |   (1|   (1|     |   (1|     |     |   (1|   (1|     |     |     |     |     |     |     |     |
 ---------------------------------------------------------------------------------------------------
   | ORA | ORA | AND | AND | EOR | EOR | ADC | ADC | STA | STA | LDA | LDA | CMP | CMP | SBC | SBC |
 5 |  n  | n,X |  n  | n,X |  n  | n,X |  n  | n,X |  n  | n,X |  n  | n,X |  n  | n,X |  n  | n,X |
   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
 ---------------------------------------------------------------------------------------------------
   | ASL | ASL | ROL | ROL | LSR | LSR | ROR | ROR | STX | STX | LDX | LDX | DEC | DEC | INC | INC |
 6 |  n  | n,X |  n  | n,X |  n  | n,X |  n  | n,X |  n  | n,Y |  n  | n,Y |  n  | n,X |  n  | n,X |
   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
 ---------------------------------------------------------------------------------------------------
   | RMB0| RMB1| RMB2| RMB3| RMB4| RMB5| RMB6| RMB7| SMB0| SMB1| SMB2| SMB3| SMB4| SMB5| SMB6| SMB7|
 7 |  n  |  n  |  n  |  n  |  n  |  n  |  n  |  n  |  n  |  n  |  n  |  n  |  n  |  n  |  n  |  n  |
   |   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|
 ---------------------------------------------------------------------------------------------------
   | PHP | CLC | PLP | SEC | PHA | CLI | PLA | SEI | DEY | TYA | TAY | CLV | INY | CLD | INX | SED |
 8 |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
 ---------------------------------------------------------------------------------------------------
   | ORA | ORA | AND | AND | EOR | EOR | ADC | ADC | BIT | STA | LDA | LDA | CMP | CMP | SBC | SBC |
 9 | #n  | nn,Y| #n  | nn,Y| #n  | nn,Y| #n  | nn,Y| #nn | nn,Y| #n  | nn,Y| #n  | nn,Y| #n  | nn,Y|
   |     |     |     |     |     |     |     |     |   (1|     |     |     |     |     |     |     |
 ---------------------------------------------------------------------------------------------------
   | ASL | INC | ROL | DEC | LSR | PHY | ROR | PLY | TXA | TXS | TAX | TSA | DEX | PHX | NOP | PLX |
 A |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
   |     | (3(1|     | (3(1|     |   (1|     |   (1|     |     |     |     |     |   (1|     |   (1|
 ---------------------------------------------------------------------------------------------------
   |     |     |     |     |     |     |     |     |     |     |     |     | WAI |     |     |     |
 B |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
   |     |     |     |     |     |     |     |     |     |     |     |     |   (1|     |     |     |
 ---------------------------------------------------------------------------------------------------
   | TSB | TRB | BIT | BIT | JMP |     | JMP | JMP | STY | STZ | LDY | LDY | CPY |     | CPX |     |
 C | nn  | nn  | nn  | nn,X| nn  |     | (nn)|(nn,X) nn  | nn  | nn  | nn,X| nn  |     | nn  |     |
   |   (1|   (1|     |   (1|     |     |     |   (1|     |   (1|     |     |     |     |     |     |
 ---------------------------------------------------------------------------------------------------
   | ORA | ORA | AND | AND | EOR | EOR | ADC | ADC | STA | STA | LDA | LDA | CMP | CMP | SBC | SBC |
 D | nn  | nn,X| nn  | nn,X| nn  | nn,X| nn  | nn,X| nn  | nn,X| nn  | nn,X| nn  | nn,X| nn  | nn,X|
   |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |     |
 ---------------------------------------------------------------------------------------------------
   | ASL | ASL | ROL | ROL | LSR | LSR | ROR | ROR | STX | STZ | LDX | LDX | DEC | DEC | INC | INC |
 E | nn  | nn,X| nn  | nn,X| nn  | nn,X| nn  | nn,X| nn  | nn,X| nn  | nn,X| nn  | nn,X| nn  | nn,X|
   |     |     |     |     |     |     |     |     |     |   (1|     |     |     |     |     |     |
 ---------------------------------------------------------------------------------------------------
   | BBR0| BBR1| BBR2| BBR3| BBR4| BBR5| BBR6| BBR7| BBS0| BBS1| BBS2| BBS3| BBS4| BBS5| BBS6| BBS7|
 F | rel | rel | rel | rel | rel | rel | rel | rel | rel | rel | rel | rel | rel | rel | rel | rel |
   |   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|   (2|
 ---------------------------------------------------------------------------------------------------

(1   - only 65SC02 and 65C02
(2   - only Lynx II
(3   - some assemblers INA/DEA


STZ  - store zero
TRB  - test and reset bit
TSB  - test and set bit
RMBx - reset bit x
SMBx - set bit x

Unsused opcodes act as NOP

        Number of Bytes Expected   Number of
Opcode  (Total- Including Opcode):  Cycles:
X2                2                    2
X3                1                    1
X7                1                    1
XB                1                    1
XF                1                    1
44                2                    3
54                2                    4
D4                2                    4
F4                2                    4
5C                3                    8
DC                3                    4
FC                3                    4



(c) 1997..2019 42Bastian Schick
